{%- comment -%}
  Renders list of filters in collection/search

  Accepts:
  - filter: {Object} collection.filter or search.filter (required)

  Usage:
  {% render 'filter', filter: filter %}
{%- endcomment -%}

{%- liquid
  assign is_active = false
  assign active_values = filter.active_values.size
  if active_values > 0
    assign is_active = true
  endif

  if filter.min_value.value != nil or filter.max_value.value != nil
    if filter.type == 'price_range'
      assign is_active = true
    endif
  endif
-%}

<div class="collection__filter"{% if filter.type == 'list' %} data-collection-nav-grouped{% endif %}>
  <button type="button" class="collection__filter__title{% if is_active %} is-expanded{% endif %}"
    data-collection-sidebar-heading
    aria-expanded="{{ is_active }}"
    aria-controls="CollectionFilter--{{ filter.label | handle }}"
    data-collapsible-trigger>
    <span>{{ filter.label }}</span>

    <span class="collection__filter__count" data-count="{{ active_values | default: 0 }}" data-collection-filter-group-count>
      {%- render 'icon-toggle-plus' -%}
      {%- render 'icon-toggle-minus' -%}
    </span>
  </button>

  {%- assign option_name_handle_separator = filter.label | handle | prepend: ',' | append: ',' -%}
  {%- assign enable_color_swatches = settings.enable_color_swatches_collection -%}

  {%- liquid
  if enable_color_swatches
    comment
      Determine if current option matches swatch handle translations
    endcomment
    assign is_swatch_option = false
    assign swatch_translation = 'general.swatches.color' | t
    assign translation_string = swatch_translation | remove: '  ' | replace: ', ', ',' | replace: ' ,', ',' | replace: ',', '____' | handle | replace: '____', ',' | append: ',' | prepend: ','

    if translation_string contains option_name_handle_separator
      assign is_swatch_option = true
    endif
  endif
-%}

  <div class="collection__filter-tags-wrapper{% if is_active %} is-expanded{% endif %}" id="CollectionFilter--{{ filter.label | handle }}" aria-hidden="{% if is_active %}false{% else %}true{% endif %}" data-collapsible-container style="{% if is_active %}height:auto;{% endif %}">
    <ul class="collection__filter-tags{% if is_swatch_option %} collection__filter-tags--swatches{% endif %}" data-collapsible-content>
      {%- case filter.type -%}
        {%- when 'list' or 'boolean' -%}

          {%- for filter_value in filter.values -%}
            {%- liquid
              capture filter_classes
                echo 'collection__filter-tag'
                if is_swatch_option
                  echo ' collection__filter-tag--swatch'
                else
                  echo ' collection__filter-tag--default'
                endif
              endcapture
            -%}
            <li class="{{ filter_classes }}"
              {% if filter_value.active %}
                data-link-remove
              {% elsif filter_value.count == 0 and filter_value.active == false %}
              {% else %}
                data-link-add
              {% endif %}>
              {%- if is_swatch_option -%}
                {%- assign swatch_color = filter_value.label | split: ' ' | last | handle -%}
                <span class="swatch__button filter__button" data-tooltip="{{ filter_value.value | escape_once | capitalize }}">
                  <input type="checkbox"
                    class="swatch__input filter__input"
                    name="{{ filter_value.param_name }}"
                    value="{{ filter_value.value }}" 
                    id="filter-{{ filter.label | escape }}-{{ forloop.index }}"
                    {% if filter_value.active %}checked{% endif %}
                    {% if filter_value.count == 0 and filter_value.active == false %}disabled{% endif %}>

                  <label class="swatch__label filter__button" for="filter-{{ filter.label | escape }}-{{ forloop.index }}" data-swatch="{{ filter_value.label | escape_once }}" data-tooltip="{{ filter_value.label | escape_once }}">
                    <span class="visually-hidden">{{ filter_value.label }}</span>
                    {% render 'icon-check' %}
                  </label>
                </span>
              {%- else -%}
                <input type="checkbox"
                  class="filter__input"
                  name="{{ filter_value.param_name }}"
                  value="{{ filter_value.value }}"
                  id="filter-{{ filter.label | escape }}-{{ forloop.index }}"
                  {% if filter_value.active %}checked{% endif %}
                  {% if filter_value.count == 0 and filter_value.active == false %}disabled{% endif %}>
                <label class="filter__button" for="filter-{{ filter.label | escape }}-{{ forloop.index }}">{{ filter_value.label }}</label>
              {%- endif -%}
            </li>
          {%- endfor -%}
        {%- when 'price_range' -%}
          {%- liquid
            assign currencies_using_comma_decimals = 'ANG,ARS,BRL,BYN,BYR,CLF,CLP,COP,CRC,CZK,DKK,EUR,HRK,HUF,IDR,ISK,MZN,NOK,PLN,RON,RUB,SEK,TRY,UYU,VES,VND' | split: ','
            assign uses_comma_decimals = false
            if currencies_using_comma_decimals contains cart.currency.iso_code
              assign uses_comma_decimals = true
            endif

            if uses_comma_decimals
              assign filter_range_max = filter.range_max | money_without_currency | replace: '.', '' | replace: ',', '.'
            else
              assign filter_range_max = filter.range_max | money_without_currency | replace: ',', ''
            endif

            assign filter_max_placeholder = filter_range_max

            if filter.min_value.value
              if uses_comma_decimals
                assign filter_min_value = filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.'
              else
                assign filter_min_value = filter.min_value.value | money_without_currency | replace: ',', ''
              endif
            endif

            if filter.max_value.value
              if uses_comma_decimals
                assign filter_max_value = filter.max_value.value | money_without_currency | replace: '.', '' | replace: ',', '.'
              else
                assign filter_max_value = filter.max_value.value | money_without_currency | replace: ',', ''
              endif

              assign filter_max_placeholder = filter_max_value
            endif
          -%}

          <li class="{{ filter_classes }}"
            {% if filter_value.active %}
              data-link-remove
            {% elsif filter_value.count == 0 and filter_value.active == false %}
            {% else %}
              data-link-add
            {% endif %}>
            <div class="filter__price" data-range-holder>
              <div class="filter__price__range range" data-range-slider data-range-filter-update data-se-min="0" data-se-step="1" data-se-min-value="{{ filter_min_value | default: 0 }}" data-se-max-value="{{ filter_max_value | default: filter_range_max }}" data-se-max="{{ filter_range_max | ceil }}">
                <div class="range__dot range__dot--left" data-range-left>
                  <span>&nbsp;</span>
                </div>
                <div class="range__dot range__dot--right" data-range-right>
                  <span>&nbsp;</span>
                </div>
                <div class="range__line">
                  <span data-range-line>&nbsp;</span>
                </div>
              </div>

              <div class="filter__price__fields">
                <div class="filter__price__field filter__price__from">
                  <span>{{ cart.currency.symbol }}</span>

                  <input
                    data-field-price-min
                    class="filter__price__input"
                    name="{{ filter.min_value.param_name }}"
                    id="filter-price-{{ filter.label | escape }}-GTE"
                    {% if filter_min_value %}
                      value="{{ filter_min_value | round }}"
                    {% endif %}
                    type="number"
                    placeholder="{{ filter_min_value | round }}"
                    min="0"
                    max="{{ filter_range_max }}">
                  <label for="filter-price-{{ filter.label | escape }}-GTE">{{ 'collection.filters.from' | t }}</label>
                </div>
                <div class="filter__price__spacer">-</div>
                <div class="filter__price__field filter__price__to">
                  <span>{{ cart.currency.symbol }}</span>

                  <input
                    data-field-price-max
                    class="filter__price__input"
                    name="{{ filter.max_value.param_name }}"
                    id="filter-price-{{ filter.label | escape }}-LTE"
                    {% if filter_max_value and filter_max_value != filter_range_max %}
                      value="{{ filter_max_value | ceil }}"
                    {% endif %}
                    type="number"
                    placeholder="{{ filter_max_placeholder | ceil }}"
                    min="0"
                    max="{{ filter_range_max | ceil }}">
                  <label for="filter-price-{{ filter.label | escape }}-LTE">{{ 'collection.filters.to' | t }}</label>
                </div>
              </div>
            </div>
          </li>
        {%- else -%}
      {%- endcase -%}
    </ul>
  </div>
</div>